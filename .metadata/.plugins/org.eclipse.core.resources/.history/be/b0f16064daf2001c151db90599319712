package com.icici.entity;

import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.EntityTransaction;
import javax.persistence.Persistence;

public class OrderManagementImpl {
	
	
	EntityManagerFactory emf = null;
	EntityManager entityManager = null;
	EntityTransaction transaction = null;

	EntityManager getEntityManager() {
		try {
			emf = Persistence.createEntityManagerFactory("corebanking");
			entityManager = emf.createEntityManager();
		} catch (Exception e) {
			e.printStackTrace();
		}
		return entityManager;
	}

	void closeEntityManagerFactory() {
		if (emf != null) {
			emf.close();
		}

	}
	
	void closeEntityManager() {
		if (entityManager != null) {
			entityManager.close();
		}

	}
	
	

	public void createOrder(Order order) {
		
		try {
			emf = Persistence.createEntityManagerFactory("corebanking");
			entityManager = emf.createEntityManager();

			transaction = entityManager.getTransaction();

			// start transaction
			transaction.begin();

			// entity
			
			order.setOrderName(order.getOrderName());
			order.setAmount(order.getAmount());

			// save call
			entityManager.persist(order);

			transaction.commit();
			entityManager.close();

			System.out.println("Order successfull....");

		} catch (Exception e) {
			System.out.println(e);
			transaction.rollback();
		} finally {
			if (transaction != null && transaction.isActive()) {
				transaction.commit();
			}
			if (entityManager != null) {
				entityManager.close();
			}
			if (emf != null) {
				emf.close();
			}
		}
	}
	
	Order getOrder(int orderId){
		
		Order order=null;
		try {
			getEntityManager();
		
			// entity
			order = entityManager.find(Order.class, 3);

			System.out.println("Order successfull....");

		} catch (Exception e) {
			System.out.println(e);
		} finally {
			closeEntityManager();
			closeEntityManagerFactory();
		}
		
		return order;
	}
	
	
	Order updateOrder(Order order) {
		
		Order orderEntity = null;
		try {
			getEntityManager();
			transaction = entityManager.getTransaction();

			// start transaction
			transaction.begin();
		
			// entity
			orderEntity = entityManager.find(Order.class, order.getOrderId());
			
			if(orderEntity==null) {
				System.out.println("Order not available....");
			}
			else {
			orderEntity.setOrderName(order.getOrderName());
			orderEntity.setAmount(order.getAmount());
			orderEntity.setStatus(order.getStatus());
			
			System.out.println("Order successfull....");
			}
			
			transaction.commit();

		} catch (Exception e) {
			System.out.println(e);
			transaction.rollback();
		} finally {
			closeEntityManager();
			closeEntityManagerFactory();
		}
		
		return order;
		
	}
	
	public void deleteOrder(int orderId){
		
		Order orderent = null;
		try {
			
			getEntityManager();
			transaction = entityManager.getTransaction();

			// start transaction
			transaction.begin();

			orderent = entityManager.find(Order.class, orderId);
			
			if(orderent==null)
				System.out.println("OrderId not found....");
			else {
				entityManager.remove(orderent);
				System.out.println("Order Deleted successfully....");
		}
		
		transaction.commit();

		} catch (Exception e) {
			System.out.println(e);
			transaction.rollback();
		} finally {
			closeEntityManager();
			closeEntityManagerFactory();
		}	
	}
	
}
